깃허브에서 직접 변경하면 먼저 pull을하고 push를 할 수 있다.

전체적인 순서 
Clone 
	Add ->Commit(git commit) -> Push



만약 소스코드를 변경했는데 변경사항을 Add하고 싶지 않다면??
	소스트리에서 해당 파일을 클릭 후 코드뭉치 버리기 
	만약 코드 뭉치 버리기하면 로컬저장소에 있는 파일의 변경내용도 없어지니까 주의할 것 

브랜치(가상의 작업 공간)(git branch 0000)
	기존 내용을 유지한 채 새로운 내용을 추가하고 싶을 때 사용한다.
	일반적으로 작업을 여기서 하고 무언가 기능적으로 다른 소스코드를 실험하고 싶을 때 브랜치를 만들어서 
	하고 정상적이고 그것을 적용시키고 싶으면 merge를 하거나 수정사항을 적용시키면 되겟지?


체크아웃
	특정 브랜치(혹은 커밋)으로 돌아가고 싶을 때 사용한다.

소스트리의 체크아웃
	브랜치 이름을 더블 클릭하는 것만으로 체크아웃이 가능

마스터브랜치 
	아무것도 생선안했을때 master란 이름의 브랜치 파일이 생긴다. 가장 기본적인 브랜치
	

일반적으로 브랜치에서 작업을 한 후에 최종본을 마스터브랜치에 올려놓는다.
브랜치에서 작업을 하고 마스터브랜치와 merge를 한다.

merge 
	하나의 브랜치를 다른 브랜치와 합치는 것을 의미한다.

헤드 브랜치
	현재 작업중인 브랜치를 말한다. 현재 작업 중인  브랜치에서 작업하고 커밋하고 기존의 master브랜치는 그대로고
	작업 중인 브랜치만 변경사항이 적용된다.

헤드 브랜치에서 다시 마스터 브랜치로 체크아웃한 다음 해당 브랜치와 병합을 누르면 변경 사항이 마스터 브랜치로 적용이 된다.

merge하고 필요없는 브랜치는 지워도 상관없다(내용은 그대로 남아있다.).


만약 브랜치를 여러개 두고 작업을 하고 마지막에 복수의 브랜치를 적용시켜서 merge하고 헀을 때
서로 다른 브랜치에서 같은 파일을 작업하면 같은 파일의 내용이 다르기 때문에 충돌이 일어날 가능성이 높다.
이럴 때는 수동으로 해결해 주어야 한다. 그렇기 때문에 같은 파일을 작업한 후에 커밋하는 것을 지양하는 것이 중요하다.

